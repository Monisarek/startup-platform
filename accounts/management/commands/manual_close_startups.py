from django.core.management.base import BaseCommand
from accounts.models import Startups, ReviewStatuses


class Command(BaseCommand):
    help = '–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—Ç–∞–ø—ã —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ —Ä—É—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞'

    def handle(self, *args, **options):
        self.stdout.write("=== –†–£–ß–ù–û–ï –ó–ê–ö–†–´–¢–ò–ï –°–¢–ê–†–¢–ê–ü–û–í ===")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å "Closed" —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ views.py
        try:
            closed_status = ReviewStatuses.objects.get(status_name="Closed")
            self.stdout.write(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—Ç–∞—Ç—É—Å 'Closed' —Å ID: {closed_status.status_id}")
        except ReviewStatuses.DoesNotExist:
            self.stdout.write(
                self.style.ERROR('‚ùå –û–®–ò–ë–ö–ê: –°—Ç–∞—Ç—É—Å "Closed" –Ω–µ –Ω–∞–π–¥–µ–Ω')
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—Ç–∞–ø—ã
        startups = Startups.objects.all()
        total_count = startups.count()
        
        if total_count == 0:
            self.stdout.write("‚ÑπÔ∏è  –°—Ç–∞—Ä—Ç–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return

        self.stdout.write(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤: {total_count}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–∞–ø—ã —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ startup_detail view
        updated_count = 0
        for startup in startups:
            # –¢–æ—á–Ω–æ —Ç–∞–∫–∞—è –∂–µ –ª–æ–≥–∏–∫–∞, –∫–∞–∫ –≤ views.py —Å—Ç—Ä–æ–∫–∞ 2053-2065
            startup.status = 'closed'
            startup.status_id = closed_status
            startup.save(update_fields=['status', 'status_id'])
            updated_count += 1
            self.stdout.write(f"‚úÖ –ó–∞–∫—Ä—ã—Ç: {startup.title} (ID: {startup.startup_id})")

        self.stdout.write(f"\nüéâ –ó–∞–∫—Ä—ã—Ç–æ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤: {updated_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        approved_count = Startups.objects.filter(status="approved").count()
        closed_count = Startups.objects.filter(status="closed").count()
        self.stdout.write(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: approved={approved_count}, closed={closed_count}")
        
        if approved_count == 0:
            self.stdout.write(self.style.SUCCESS("‚úÖ –í—Å–µ —Å—Ç–∞—Ä—Ç–∞–ø—ã –∑–∞–∫—Ä—ã—Ç—ã!"))
        else:
            self.stdout.write(self.style.WARNING(f"‚ö†Ô∏è  {approved_count} —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –≤—Å–µ –µ—â–µ approved"))
